import logging
import azure.functions as func
from azure.cosmos import CosmosClient, exceptions

# Cosmos DB connection string and database/container names
COSMOS_ENDPOINT = "<your_cosmos_db_endpoint>"
COSMOS_KEY = "<your_cosmos_db_key>"
DATABASE_NAME = "<your_database_name>"
CONTAINER_NAME = "<your_container_name>"

# Initialize Cosmos DB client
client = CosmosClient(COSMOS_ENDPOINT, COSMOS_KEY)
database = client.get_database_client(DATABASE_NAME)
container = database.get_container_client(CONTAINER_NAME)

def main(req: func.HttpRequest) -> func.HttpResponse:
    """
    An HTTP-triggered function that queries Cosmos DB and returns the result.
    """
    try:
        # Query Cosmos DB to retrieve all items (adjust based on your data model)
        items = container.read_all_items(max_item_count=10)
        result = [item for item in items]
        
        # Return the result as a JSON response
        return func.HttpResponse(
            body=str(result),
            mimetype="application/json",
            status_code=200
        )
    except exceptions.CosmosResourceNotFoundError:
        return func.HttpResponse("Resource not found in Cosmos DB.", status_code=404)
    except Exception as e:
        logging.error(f"Error: {e}")
        return func.HttpResponse(f"Error: {e}", status_code=500)
